package java1.ch4배열;

import java.util.Scanner;

public class EX7_비회원제게시판 {
	public static void main(String[] args) {
		
/*
 
	1. 입력받을 수 있는 Scanner 생성
	2. 선택 >> 1. 글쓰기 2. 글보기 출력
	3. 1을 선택했을때, 2를 선택했을때, 그외 --> 3개중에 1개는 무조건 선택해야하니까 if, else if, else 사용
	4. 1. 글쓰기 선택 시
		1. 글쓰기 페이지 출력
		2. 제목, 내용, 작성자, 비밀번호의 객체를 sysout으로 입력받아 생성
		3. 입력 받은 내용을 저장해줄 배열 생성 100개까지 저장, 4개 항목 입력 [100][4]
		4. [글저장] 배열 생성, 배열에 저장해주기   
		5. 첫 페이지에 출력되도록 번호, 작성자, 제목 순으로 출력
		6. 앞장에 출력되도록 for문 돌려서 더해줌 
			- 글저장의 랭스길이까지 반복하고 저장할 내용 기재
			- 글을 출력해보니 [글저장]에 break를 안걸어주니 100개가 한번에 입력되서 break 추가
 	
 	5. [2. 글보기 선택 시]
 		1. 목록보기(뒤로가기) -> break 써서 종료
 		2. 3번 글수정 -> 패스워드 입력받고 저장된 배열 길이까지 for문 돌림
 			- 저장된 패스워드와 입력한 패스워드와 맞는지 확인
 			- 맞다면 수정할 제목과 내용을 입력받아서 저장된 배열에서 해당 위치에 대입해주기
 			- 입력이 완료되었다면 더이상 실행되지 않도록 break -> 안걸어주니까 알람 계속 뜸
 			- 비밀번호가 다를때 알람뜨기 break 얘도 브레이크 안걸어주니까 알람 계속 뜸 			
 		3. 2번 글삭제 -> 패스워드 입력받아서 비밀번호가 동일하면 실행
 			- 해당 인덱스에 null 을 대입해서 값 없애주기
 			- for문을 돌려서 저장된 인덱스에 null 값이 있는지 확인 후 있다면 앞으로 한칸씩 땡겨주기
 			- for 문이 다 돌고 null 값이 발견되면 알림 후 종료
*/		
	
	// 글저장[i][0] = title; 글저장[i][1] = content; 글저장[i][2] = writer; 글저장[i][3] = password;
		
	Scanner scan = new Scanner(System.in);		// 1. 스캐너라는 클래스를 실행해서 값을 입력받는다
	
	// 3. 문자를 넣어야하기 때문에 String 형인 2차원 배열 생성 [행][열] 값을 넣어준 길이 만큼만 사용 가능
	String[][] 글저장 = new String[100][4];
	// 2차원 배열을 사용한 이유는 확인할 수 있는 값이 두개가 필요하기 때문
	
	while ( true ) {							// 반복문 게시글을 추가할 수 있도록 동일한 작업이 반복되어야하기 때문에
		
		// 1. 기본 틀과 입력 받을 수 있는 스캐너 생성
		System.out.println("----------[ 커뮤니티 ]----------");
		System.out.println("번호\t작성자\t제목 ");		// \t는 1번 tab한 것과 같음
		
		
		// 4. 3에서 저장한 내용들이 출력될 수 있도록 위치 지정
		for( int i = 0; i < 글저장.length; i++) {		// 0부터 글저장 배열의 길이만큼
			if( 글저장[i][0] != null ) {				// 배열을 만들면 기본 값이 null로 되어있어서 null이 아닌 = 입력된 데이터가 있는 것을 찾음
				// 저장된 글이 있을때
				System.out.println( i + "\t" + 글저장[i][2] + "\t" + 글저장[i][0] );
			}
		}
		
		System.out.println("-----------------------------");	
		
		
		System.out.println(" 선택 >> 1. 글쓰기 2. 글보기");		// 사용자가 선택할 수 있도록 보기 출력
		int 선택 = scan.nextInt();							// 출력된 내용을 스캐너로 가져온뒤 선택이라는 변수에 저장해줌 int형인 이유는 숫자로 사용할 것이기 때문
		
		
		// 2. 사용자가 1, 2중 선택했을 경우 실행될 행동 만들기
		if(	선택 == 1 ) {		
			// 1 글쓰기를 선택했을때 출력되는 기본 값 입력 + 내용을 변수에 담아주기
			System.out.println("--------[ 글쓰기 페이지 ]--------");
			System.out.println("제목 : ");
			String title = scan.next();
			System.out.println("내용 : ");
			String content = scan.next();
			System.out.println("작성자 : ");
			String writer = scan.next();
			System.out.println("비밀번호 : ");
			String password = scan.next();
			
		// 3. 입력받은 변수들을 글저장이라는 배열을 생성해준 뒤 배열에 저장하기 [ 배열호출 : 배열명[행인덱스] [열인덱스] ]	
			for(int i = 0; i < 글저장.length; i++) {		// 글은 1개만 저장할게 아니고 입력될 때마다, 100개까지 실행되어야함
				if( 글저장[i][0] == null ) {				// 기존에 있는 값을 지우거나 무작위로 넣어지면 안되기 때문에 null 값일때만 실행되도록 제한
					// 글저장 배열이 null일때(값이 없을때)
					글저장[i][0] = title;					// 입력한 값이 들어갈 자리 지정해주기
					글저장[i][1] = content;
					글저장[i][2] = writer;
					글저장[i][3] = password;
					break;								// 저장이 완료되면 종료 -> 브레이크 안걸어 줄 경우 입력한 값이 100개까지 한번에 들어감
														// 저장 완료된 내용 첫페이지에 출력 위로 ↑↑↑
				} // if 종료
			} // for 종료
		} // if 종료
		
		// 5. 사용자가 2번 글보기를 선택했을 경우
		else if( 선택 == 2) {								
			System.out.println("게시글 번호[인덱스] 선택 : ");	// 사용자가 선택할 수 있도록 보기 및 입력창 생성
			int 게시글번호 = scan.nextInt();				// 입력된 내용을 게시글번호라는 변수로 저장
			
			for( int i = 0; i < 글저장.length; i++) {
				if( 게시글번호 == i ) {						// 선택한 게시글 번호[인덱스]가 i일때 배열에 저장되어있던 내용 출력
					System.out.println("--------[ 게시물 상세페이지 ]--------");
					System.out.println("작성자 : " + 글저장[i][2] + " 제목 : " + 글저장[i][0]);
					System.out.println("내용 : " + 글저장[i][1]);
					System.out.println("--------------------------------");
					
					System.out.println(" 선택 >> 1. 목록보기(뒤로가기) 2. 글삭제 3. 글수정"); 
					int 글수정메뉴 = scan.nextInt();
					
					// 6. 게시물 상세페이지에서 선택하는 경우의 수 3개 입력
					
					if( 글수정메뉴 == 1) {		// 1 목록보기 선택시 종료하고 처음으로(반복문전체탈출)
						break;
					}
					
					// 8. 2번 삭제를 선택한 경우
					else if ( 글수정메뉴 == 2) {	// * 삭제 메뉴 * 
						
						System.out.println("게시물 비밀번호 입력 : " );
						String pw = scan.next();
						
						if( 글저장[i][3].equals(pw) ) {	// 저장된 비밀번호와 동일하면
							
							글저장[i][0] = null;	// 값을 비울 수 있도록 초기 값인 null 대입
							글저장[i][1] = null;
							글저장[i][2] = null;
							글저장[i][3] = null;
							// 저장된 내용을 삭제하기
							
							for( int a = i; a < 글저장.length; a++) {	// 중간에 삭제된 내용이 있다면 그 자리를 채우기 위해 실행
								글저장[a][0] = 글저장[a+1][0];
								글저장[a][1] = 글저장[a+1][1];
								글저장[a][2] = 글저장[a+1][2];
								글저장[a][3] = 글저장[a+1][3];
								if( 글저장[a+1][0] == null ) {
									// 저장된 배열에 null 값이 발견되면 끝내
									System.err.println("[알림] 게시글 삭제 완료");
									break;
								} // if 종료
							} // for 종료
						} // if 종료
						
						else {
							System.err.println("[알림] 비밀번호가 다릅니다.");
						}
						
					} // else if
					
					// 7. 3번 수정을 선택한 경우 
					else if ( 글수정메뉴 == 3) {	// * 수정 메뉴 *
						System.out.println("게시물 비밀번호 입력 : " );	// 비번을 입력해야 수정될 수 있도록
						String pw = scan.next();
						
							if( 글저장[i][3] != null && 글저장[i][3].equals(pw) ) {	// 선택한 게시물의 내용이 있고, 비밀번호가 입력한 번호랑 같을때
								System.out.println("수정할 제목 : ");
								String 수정할제목 = scan.next();
								System.out.println("수정할 내용 : ");
								String 수정할내용 = scan.next();
								
								글저장[i][0] = 수정할제목;		// 입력한 내용을 선택한 자리에 대입
								글저장[i][1] = 수정할내용;		 
									
								System.err.println("[알림] 내용이 수정되었습니다.");
								break;
							} // if 끝
							
							else{	// 선택한 게시물의 내용이 없거나, 비밀번호가 다를때
								System.err.println("[알림] 비밀번호가 다릅니다 [삭제실패]");
								break;
							} // else 종료
						
					} // else if 종료
					else {
						System.err.println("번호 오류");
					} // else 종료
					
				} // if 종료
			} // for 종료
		} // else if 종료
		else {
			System.err.println("[안내] 번호입력 오류 다시 선택해주세요.");
		}
	}

	} // main 종료
}	// class 종료



/*
	
	비회원제 게시판 만들기
	
	[ 조건 ]
	변수 , 제어문 , 반복문 , 1차원 배열 , 2차원 배열 , main 메소드만 사용
	게시물 개수 최대 100개
	
	[ 출력 예시 ]
	-------------------
	번호		작성자	제목
	-------------------
	1.글쓰기	2.글보기
	
	

*/





	

















